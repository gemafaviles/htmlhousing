{
  "hash": "24f930d7c0b869509f31fee744a27579",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Working with real data in Madrid\"\nauthor: \"Gema Fernández-Aviles\"\n# format: html\nengine: knitr  ## LO AÑADO AHORA\nformat: live-html\nwebr:\n  packages:\n    - readxl    # Para leer los datos en Excle\n    - tidyverse # Para manipular los datos\n    - janitor   # Para limpiar los nombres de las variables\n    - sjmisc    # Para estadísticos descriptivos\n    # library(DataExplorer # Para report automático\n    - sf        # Para trabajar con datos espaciales\n    - mapSpain  # Para crear mapas de España\n    - DT        # Para mostrar tablas interactivas\n    - leaflet   # Para crear mapas interactivos\n    - tidyterra # Para trabajar con datos espaciales, tiles\n    - slippymath # Para trabajar con datos espaciales, tiles\n    - skimr    # Para estadísticos descriptivos\nresources:\n    - housing_madrid\nembed-resources: true \ntheme: cerulean\nhighlight-style: ayu-mirage\nself-contained: true\ndate: \"2024-11-18\"\ncode-link: true\nnumber-sections: true\nexecute:\n  code-overflow: scroll\n  echo: true\n  eval: true\n  output: true\n  include: true\n  freeze: auto\n  fig-height: 5\n  warning: false\n  code-fold: true\n  comment: \"#>\"\n  code-line-numbers: true\n  code-copy: true\n#bibliography: biblio.bib\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n<!-- Poner esto en la terminal para que funcione el quarto-live -->\n<!-- Tools->Terminal->Move Focus to Terminal -->\n<!-- quarto add r-wasm/quarto-live -->\n\n![](housing_madrid/logo_mdsr_uclm.png){width=200px}\n\n\n![**Máster en Data Science & Business Analytics**](https://blog.uclm.es/tp-mbsba/)\n\n\n# Lee las librerías\n\n\n\n::: {.cell}\n```{webr}\nlibrary(readxl)     # Para leer los datos\nlibrary(tidyverse)  # Para manipular los datos\nlibrary(janitor)    # Para limpiar los nombres de las variables\nlibrary(sjmisc)     # Para estadísticos descriptivos\n# library(DataExplorer)  # Para report automático\nlibrary(sf)         # Para trabajar con datos espaciales\nlibrary(mapSpain)   # Para crear mapas de España\nlibrary(DT)         # Para mostrar tablas interactivas\nlibrary(leaflet)    # Para crear mapas interactivos\nlibrary(tidyterra)  # Para trabajar con datos espaciales, tiles\n```\n:::\n\n\n\n\n\n# Lee los datos: precios de la vivienda y mucho más en Madrid\n\n## Lee las variables\n\n\n::: {.cell}\n```{webr}\nlist.files(\"housing_madrid\")\n\nviviendas <- read_xlsx(\"housing_madrid/housing_price_madrid_NA_gema.xlsx\",\n  sheet = \"viviendas\")\n```\n:::\n\n\n\n\n\n## Lee el diccionario del dataset\n\n\n::: {.cell}\n```{webr}\ndiccionario <- read_xlsx(\"housing_madrid/housing_price_madrid_NA_gema.xlsx\",\n  sheet = \"diccionario\"\n)\n```\n:::\n\n\n\n## Lee el objeto espacial con los barrios de Madrid\n\n\n::: {.cell}\n```{webr}\nlibrary(sf)         # Para trabajar con datos espaciales  \nbarrios_madrid <- st_read(\"housing_madrid/madrid-barrios.gpkg\", quiet = TRUE )\n```\n:::\n\n\n\n\n# Exploración inicial de los datos\n\n\n## Creación de una tabla con `GT` para mostrar las primeras filas del objeto `diccionario`\n\n\n::: {.cell}\n```{webr}\nDT::datatable(diccionario, options = list(\n  pageLength = 7\n))\n```\n:::\n\n\n\n## Visualizacicón de las primeras filas del dataset con la librería `DT` del objeto `viviendas`, una vez se han homogeneizado los nombres de las variables con la función `clean_names()` de la librería `janitor`\n\n\n::: {.cell}\n```{webr}\nviviendas <- viviendas %>%\n  clean_names()\n\nDT::datatable(viviendas, options = list(\n  pageLength = 7\n))\n```\n:::\n\n\n\n\n\n\n## Análisis exploratorio básico de los datos con `skimr`\n\n\n\n::: {.cell}\n```{webr}\nlibrary(skimr)  # Para estadísticos descriptivos)\nskim(viviendas)\n```\n:::\n\n\n\n\n\n## Resumen descriptivo de los datos. No lo ejecuto porque no se ve bien en el html\n\n\n\n::: {.cell}\n```{webr}\n#| eval: false\nresumen_descriptivo <- descr(viviendas)\nresumen_descriptivo\n```\n:::\n\n\n\n\n\n## Analizamos la variable antigüedad de la vivienda, `antig` y la variable delincuencia, `delincuencia`, y utilizamos la función `group_by()`.\n\n\n\n::: {.cell}\n```{webr}\n# agrupa por barrios y calcula la antiguiedad media de la vivienda\nantig_medio_barrios <- viviendas |>\n  group_by(barrio) |>\n  summarise(antig_mean = mean(antig, na.rm = TRUE))\n```\n:::\n\n::: {.cell}\n```{webr}\n# crea un lollipop para ordenado de menor a mayor y con los segmentos a color \nggplot(antig_medio_barrios, aes(x = reorder(barrio, antig_mean), y = antig_mean)) +\n  geom_point() +\n  geom_segment(aes(xend = barrio, yend = 0), size = 0.5, col=\"blue\") +\n  coord_flip() +\n  labs(title = \"Antigüedad media de la vivienda por barrios de Madrid\",\n    x = \"Barrios\",\n    y = \"Antigüedad media (€/m2)\"\n  ) +\n  theme_bw()\n```\n:::\n\n\n\n\n## Analizamos la tasa de delincuencia por `distritos` de Madrid con la función `group_by()`\n\n\n\n::: {.cell}\n```{webr}\n# agrupa por distritos y tasa de delincuencia\ndelincuencia_media_distrito <- viviendas |>\n  group_by(distrito) |>\n  summarise(delincuencia_mean = mean(delincuencia, na.rm = TRUE))\n```\n:::\n\n::: {.cell}\n```{webr}\n# crea un lollipop ordenado de menor a mayor\nggplot(delincuencia_media_distrito, aes(x = reorder(distrito, delincuencia_mean), y = delincuencia_mean)) +\n  geom_point() +\n  geom_segment(aes(xend = distrito, yend = 0), size = 0.5, col=\"blue\") +\n  coord_flip() +\n  labs(title = \"Tasa de delincuencia media de los distritos de Madrid\",\n    x = \"Distritos\",\n    y = \"Tasa de delincuencia (%)\"\n  ) +\n  theme_bw()\n```\n:::\n\n\n\n\n# Analisis espacial\n\n## Crea el objeto `viviendas_sf` y proyecta el CRS\n\n\n\n::: {.cell}\n```{webr}\nviviendas_sf <- st_as_sf(\n  viviendas,\n  coords = c(\"longitud\", \"latitud\"),\n  crs = st_crs(4326)\n)\n\nplot(viviendas_sf)   \n```\n:::\n\n\n\n\n## Crea un primer mapa con la localización de las viviendas utilizando `ggplot2` y `geom_sf()` con fondo. Utliza la función `esp_getTiles()` para obtener el fondo del mapa\n\n\n\n\n::: {.cell}\n```{webr}\n#| warning: false\n# crea el fondo del mapa\ntile <- esp_getTiles(viviendas_sf, \"IDErioja\",\n  zoommin = 1,\n  crop = TRUE\n)\n\n# crea el mapa\nggplot() +\n  geom_spatraster_rgb(data = tile) +\n  geom_sf(\n    data = viviendas_sf,\n    col = \"blue\",\n    size = 1.5,\n    alpha = 0.3\n  )\n```\n:::\n\n\n\n## Crea un mapa interactivo con `leaflet` y añade un cluster de puntos con `markerClusterOptions()`\n\n\n\n\n::: {.cell}\n```{webr}\nprecio_viv <- viviendas_sf$precio_house_em2\n\nleaflet(viviendas_sf) |>\n  addTiles() |>\n  addMarkers(popup = precio_viv, clusterOptions = markerClusterOptions()) |>\n  # cambia el color darkblue por una escala de colores para el precio de la vivienda\n  addCircleMarkers(radius = 1, color = ~ colorNumeric(\"viridis\", domain = precio_viv)(precio_viv), popup = precio_viv) |>\n  # añade un etiqueta con el precio de la vivienda\n  addLegend(\"bottomright\", pal = colorNumeric(\"viridis\", domain = precio_viv), values = precio_viv, title = \"Precio vivienda (€/m2)\")\n```\n:::\n\n\n\n\n\n## Trabajamos con barrios utilizando el objeto `barrios_madrid`. Comprobamos que los datos y los barrios están bien definidos y en el mismo CRS.\n\n\n::: {.cell}\n```{webr}\n# proyecta el CRS de barrios_madrid al CRS de viviendas_sf\nbarrios_madrid <- st_transform(barrios_madrid, st_crs(viviendas_sf))\n# comprueba que los datos y los barrios están bien definidos y en el mismo CRS\nst_crs(barrios_madrid) == st_crs(viviendas_sf)\n```\n:::\n\n\n\n### Calcula el precio medio por barrio\n\n\n::: {.cell}\n```{webr}\npm <- viviendas |>\n   group_by(barrio) |>\n   summarise(precio_medio = mean(precio_house_em2))\n```\n:::\n\n\n\n### Une el precio medio, `pm`, al objeto `barrios_madrid`\n\n\n::: {.cell}\n```{webr}\nbarrios_madrid <- barrios_madrid |> left_join(pm)\n```\n:::\n\n\n\n\n<!-- ```{webr} -->\n<!-- #| eval: false -->\n<!-- #| echo: false -->\n\n<!-- barrios_madrid_clean <- barrios_madrid %>% filter(!is.na(precio_medio)) -->\n\n<!-- ggplot(barrios_madrid_clean) + -->\n<!--  geom_sf(aes(fill = precio_medio), color = \"black\") + -->\n<!--  scale_fill_gradientn( -->\n<!--    colours = hcl.colors(20, \"Inferno\", rev = TRUE), -->\n<!--    labels = scales::label_number( -->\n<!--      big.mark = \".\",  -->\n<!--      decimal.mark = \",\",  -->\n<!--      suffix = \"€/m2\" -->\n<!--      ) -->\n<!--    ) +  -->\n<!--   theme_minimal() -->\n<!-- ``` -->\n\n\n\n### Especificamos la paleta de color a utilizar\n\n\n::: {.cell}\n```{webr}\ncortes <- classInt::classIntervals(barrios_madrid$precio_medio,\n  style = \"pretty\"\n)$brks\n\ncolores <- hcl.colors(15, \"Spectral\", rev = TRUE, alpha = 0.8)\n```\n:::\n\n\n\n\n### Crea el mapa con los barrios de Madrid y el precio medio de la vivienda\n\n\n::: {.cell}\n```{webr}\nggplot() +\n  geom_sf(\n    data = barrios_madrid,\n    fill = \"gray90\",\n    color = NA\n  ) +\n  geom_sf(\n    data = barrios_madrid,\n    aes(fill = precio_medio),\n    alpha = .7,\n    color = \"grey50\",\n  ) +\n  labs(color = \"Precio medio vivienda (€/m2)\") +\n  scale_fill_gradientn(\n    na.value = NA,\n    colours = colores,\n    breaks = cortes,\n    labels = function(x) {\n      paste0(x, \"€/m2\")\n    },\n    guide = guide_legend(reverse = TRUE)\n  ) +\n  theme_light() +\n  labs(\n    fill = \"\",\n    title = \"Precio medio de la vivienda en Madrid\",\n    subtitle = \"Q2-2010\"\n  )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}